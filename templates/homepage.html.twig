{% extends 'base.html.twig' %}

{% block body %}
<div class="container">
    <h1>{{title}}</h1>
    <div id="map"></div>
</div>
<style>
#map { height: 600px; }
</style>
<script>
let bcn = [41.38879,2.15899];
let map = L.map('map').setView([bcn[0], bcn[1]], 13);
{# var icon = new LeafIcon(); #}

const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);

let pointer = L.icon({
    iconUrl: 'pointer.webp',

    iconSize:     [30, 43], // size of the icon
    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});
let pointbiz = '';
{% for build in data %}
    pointbiz = '{{build.point}}'; 
    pointbiz = pointbiz.match(/POINT\(([0-9.]+) ([0-9.]+)\)/);
    console.log(pointbiz);
    
    L.marker([pointbiz[1], pointbiz[2]], {icon: pointer}).addTo(map).on('click', function() {
        window.location.href = '/building/{{build.id}}';
    });
{% endfor %}
{# L.marker([data[0].point[0], data[0].point[1]], {icon: pointer}).addTo(map).on('click', function() {
    window.location.href = '/building/'+data[0].id;
});
L.marker([data[1].point[0], data[1].point[1]], {icon: pointer}).addTo(map).on('click', function() {
    window.location.href = '/building/'+data[1].id;
});
L.marker([data[2].point[0], data[2].point[1]], {icon: pointer}).addTo(map).on('click', function() {
    window.location.href = '/building/'+data[2].id;
});; #}

{# console.log(data[0].point[0]); #}


</script>
{% endblock %}